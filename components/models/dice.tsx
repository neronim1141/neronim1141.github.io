/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\public\models\dice.gltf -t
*/

import * as THREE from "three";
import React, { forwardRef, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Group } from "three";

type GLTFResult = GLTF & {
  nodes: {
    Cube001: THREE.Mesh;
    Cube001_1: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
  };
};

export const Dice = forwardRef<Group, JSX.IntrinsicElements["group"]>(
  function Model(props, ref) {
    const { nodes, materials } = useGLTF("models/dice.gltf") as GLTFResult;
    return (
      <group {...props} dispose={null} ref={ref}>
        <mesh
          geometry={nodes.Cube001.geometry}
          material={materials["Material.001"]}
        />
        <mesh
          geometry={nodes.Cube001_1.geometry}
          material={materials["Material.002"]}
        />
      </group>
    );
  }
);

useGLTF.preload("models/dice.gltf");
